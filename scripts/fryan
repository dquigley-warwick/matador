#!/usr/bin/env python
# coding: utf8

""" Rip-off of cryan for displaying .res file summaries. """


def main(**kwargs):
    from matador.hull import QueryConvexHull
    from matador.scrapers.castep_scrapers import res2dict
    from matador.utils.cursor_utils import display_results
    from matador.utils.chem_utils import get_formula_from_stoich
    from matador.crystal import Crystal

    cursor, failures = res2dict("*.res", info=False)
    to_display = []
    if failures:
        print(f"Unable to read files: {failures}")

    for doc in cursor:
        if not doc.get("space_group") or kwargs.get("symprec") is not None:
            doc.pop("space_group")
        to_display.append(Crystal(doc, symprec=kwargs.get("spg_symprec")))

    if kwargs.get('hull'):
        QueryConvexHull(cursor=cursor, hull_cutoff=10)
    else:
        if kwargs.get('formula'):
            to_display = [doc for doc in to_display
                          if get_formula_from_stoich(sorted(doc['stoichiometry'])) == kwargs.get('formula')]

        to_display = sorted(to_display, key=lambda x: x['enthalpy_per_atom'])
        if kwargs.get('top'):
            to_display = to_display[:kwargs.get('top')]

        display_results(to_display, use_source=True, summary=kwargs.get("summary"))


if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument('-f', '--formula', type=str)
    parser.add_argument('-m', '--hull', action='store_true')
    parser.add_argument('-t', '--top', type=int)
    parser.add_argument("-spg", "--spg_symprec", type=float, help="spglib tolerance to use when re-computing spacegroups")
    parser.add_argument("-s", "--summary", action='store_true', help="use matador's output summary")
    parsed_kwargs = vars(parser.parse_args())
    main(**parsed_kwargs)
